1.A hash function maps a big number or string to a small integer that can be used as index in hash table.

-----------------------------------------------------------------------------------------------------------------------------

2.A good hash function should have following properties
1) Efficiently computable.
2) Should uniformly distribute the keys (Each table position equally likely for each key)

For example for phone numbers a bad hash function is to take first three igits. A better function is consider last three digits.

-----------------------------------------------------------------------------------------------------------------------------

3. Collision Handling: Since a hash function gets us a small number for a key which is a big integer or string, 
there is possibility that two keys result in same value. 
The situation where a newly inserted key maps to an already occupied slot in hash table is called collision 
and must be handled using some collision handling technique. Following are the ways to handle collisions:

Chaining:The idea is to make each cell of hash table point to a linked list of records that have same hash function value. 
Chaining is simple, but requires additional memory outside the table.

Open Addressing: In open addressing, all elements are stored in the hash table itself. 
Each table entry contains either a record or NIL. When searching for an element, 
we one by one examine table slots until the desired element is found or it is clear that the element is not in the table.

----------------------------------------------------------------------------------------------------------------------------- 
4. Print a binary tree in vertical order.
-----------------------------------------------------------------------------------------------------------------------------
5. Find whether an array is subset of another array

-----------------------------------------------------------------------------------------------------------------------------